def solution(bridge_length, weight, truck_weights):
    #다리의 길이만큼 만들어 준다.
    bridge = [0] * bridge_length
    # 몇 초가 걸리는지 세어주기 위한 변수
    time = 0

    #bridge가 있을때까지 while문이 작동한다. 
    while bridge:
        #bridge의 맨 앞의 요소를 뺴주고
        bridge.pop(0)
        #시간을 1초씩 늘려준다.
        time += 1
        #만약에 다리의 무게가 담긴 리스트가 비어있지 않으면
        if len(truck_weights) != 0:
            #다리에 담긴 요소의 합과 + 트럭리스트의 앞 요소가 무게를 초과하지 않는다면 
            if sum(bridge) + truck_weights[0] <= weight:
                #트럭의 앞의 요소를 빼주고
                truck = truck_weights.pop(0)
                #다리의 길이만큼 만든 리스트에 값을 추가해준다.
                bridge.append(truck)
            #만약에 무게를 초과한다면 0을 추가해준다.
            else:
                bridge.append(0)
                 
    return time


# 수도 코드
# 1.다리의 길이만큼 리스트가 있어야 다리를 지났는지 판단할 수 있으므로 리스트를 만든다.
# 2.시간을 세어줄 변수를 만들어준다.
# 3.모든 트럭이 지나가는 것을 확인해야 하므로 다리에 모든 트럭이 지나갈 때까지 while 문을 돌려준다.
# 4.먼저 다리 앞 쪽의 요소를 빼주면 다리가 지나갔다고 판단할 수 있다.
# 5.다리가 지나갈 때 시간을 1초씩 늘려준다.
# 6.만약 트럭 리스트가 비어있지 않다면
#     6-1.bridge에 담긴 값의 합과 + 트럭을 차례대로 앞에서부터 빼준 값이 견딜 수 있는 무게를 초과하지 않으면
#     6-1.트럭 리스트에 해당하는 요소를 빼준 것을 다리의 길이만큼 만든 리스트에 넣어준다.
#     6-2.만약 무게를 초과한다면 리스트에 0을 넣어준다.
# 7.결과값을 return해준다.


# 입출력 예 1번
# bridge_legnth = 2, weight = 100, truck_weights = [7, 4, 5, 6] return 8
# bridge[0]을 pop하면 [0]이 나오고 time += 1 (1초)
# 0(sum(bridge)) + 7(트럭리스트 첫 번째 요소) < 총무게
# [0, 7] 7이 리스트에 담겨진다.

# bridge[0]을 pop하면 [0]이 나오고 time += 1 (2초)
# 7(sum(bridge)) + 4(트럭리스트 첫 번째 요소) > 총무게
# [7, 0] 0이 리스트에 담겨진다.

# bridge[0]을 pop하면 [7]이 나오고 time += 1 (3초)
# 0(sum(bridge)) + 4(트럭리스트 첫 번째 요소) < 총무게
# [0, 4] 4가 리스트에 담겨진다.

# bridge[0]을 pop하면 [0]이 나오고 time += 1 (4초)
# 4(sum(bridge)) + 5(트럭리스트 첫 번째 요소) < 총무게
# [4, 5] 5가 리스트에 담겨진다.

# bridge[0]을 pop하면 [4]이 나오고 time += 1 (5초)
# 5(sum(bridge)) + 6(트럭리스트 첫 번째 요소) > 총무게
# [5, 0] 0이 리스트에 담겨진다.

# bridge[0]을 pop하면 [5]이 나오고 time += 1 (6초)
# 0(sum(bridge)) + 6(트럭리스트 첫 번째 요소) < 총무게
# [0, 6] 6이 리스트에 담겨진다.

# bridge[0]을 pop하면 [0]이 나오고 time += 1 (7초)
# 더 이상 추가할 트럭이 없다.
# [6]만 남는다.

# bridge[0]을 pop하면 [6]이 나오고 time += 1 (8초)
# 더 이상 추가할 트럭이 없다.
# 추가할 트럭도 없다
# 다리 위에 트럭이 없으므로 종료!